{"version":3,"sources":["scripts/todo.ts"],"names":[],"mappings":";AA6DgC,aAxDhC,IAAM,EAAW,SAAS,cAA+B,cACnD,EAAY,MAAA,OAAA,EAAA,EAAU,cAAgC,SACtD,EAAW,SAAS,cAAgC,cAEpD,EAAY,QAEd,EAAgB,GAEpB,SAAS,IACP,aAAa,QAAQ,EAAW,KAAK,UAAU,IAGjD,SAAS,EAAW,GAClB,IAAM,EAAM,EAAM,OAAuB,cACzC,EAAG,SACH,EAAQ,EAAM,OAAO,SAAA,GAAI,OAAI,EAAK,KAAO,SAAS,EAAG,MACrD,IAGF,SAAS,EAAU,GACjB,IAAM,EAAK,SAAS,cAAc,MAClC,EAAG,GAAK,EAAQ,GAAG,WACnB,IAAM,EAAO,SAAS,cAAc,QACpC,EAAK,UAAY,EAAQ,KACzB,IAAM,EAAM,SAAS,cAAc,UACnC,EAAI,UAAY,IAChB,EAAI,iBAAiB,QAAS,GAC9B,EAAG,YAAY,GACf,EAAG,YAAY,GACX,aAAoB,kBACtB,EAAS,YAAY,GAIzB,SAAS,EAAiB,GAExB,GADA,EAAM,iBACF,aAAqB,iBAAkB,CACzC,IAAM,EAAU,EAAU,MAC1B,EAAU,MAAQ,GAClB,IAAM,EAAmB,CACvB,KAAM,EACN,GAAI,KAAK,OAEX,EAAM,KAAK,GACX,EAAU,GACV,KAIJ,MAAA,GAAA,EAAU,iBAAiB,SAAU,GAErC,IAAM,EAAa,aAAa,QAAQ,GAExC,GAAmB,OAAf,EAAqB,CACvB,IAAM,EAAc,KAAK,MAAM,GAC/B,EAAQ,EACR,EAAY,QAAQ","file":"todo.47e73edf.js","sourceRoot":"../src","sourcesContent":["interface ToDo {\n  text: string;\n  id: number;\n}\n\nconst toDoForm = document.querySelector<HTMLFormElement>('#todo-form');\nconst toDoInput = toDoForm?.querySelector<HTMLInputElement>('input');\nconst toDoList = document.querySelector<HTMLUListElement>('#todo-list');\n\nconst TODOS_KEY = 'toDos';\n\nlet toDos: ToDo[] = [];\n\nfunction saveToDos() {\n  localStorage.setItem(TODOS_KEY, JSON.stringify(toDos));\n}\n\nfunction deleteToDo(event: MouseEvent) {\n  const li = (event.target as HTMLElement).parentElement as HTMLLIElement;\n  li.remove();\n  toDos = toDos.filter(toDo => toDo.id !== parseInt(li.id));\n  saveToDos();\n}\n\nfunction paintToDo(newToDo: ToDo) {\n  const li = document.createElement('li');\n  li.id = newToDo.id.toString();\n  const span = document.createElement('span');\n  span.innerText = newToDo.text;\n  const btn = document.createElement('button');\n  btn.innerText = '‚ùå';\n  btn.addEventListener('click', deleteToDo);\n  li.appendChild(span);\n  li.appendChild(btn);\n  if (toDoList instanceof HTMLUListElement) {\n    toDoList.appendChild(li);\n  }\n}\n\nfunction handleToDoSubmit(event: Event) {\n  event.preventDefault();\n  if (toDoInput instanceof HTMLInputElement) {\n    const newToDo = toDoInput.value;\n    toDoInput.value = '';\n    const newToDoObj: ToDo = {\n      text: newToDo,\n      id: Date.now(),\n    };\n    toDos.push(newToDoObj);\n    paintToDo(newToDoObj);\n    saveToDos();\n  }\n}\n\ntoDoForm?.addEventListener('submit', handleToDoSubmit);\n\nconst savedToDos = localStorage.getItem(TODOS_KEY);\n\nif (savedToDos !== null) {\n  const parsedToDos = JSON.parse(savedToDos) as ToDo[];\n  toDos = parsedToDos;\n  parsedToDos.forEach(paintToDo);\n}\n"]}